import {
  closeAllOverlayAction,
  closeOverlayAction,
  openOverlayAction,
  updatePropsAction,
} from './actions';

export enum OverlayNames {
  ARCHIVE_MODAL = 'ARCHIVE_MODAL',
  AVATAR_DETAIL = 'AVATAR_DETAIL',
  AUTHORS_DETAIL = 'AUTHORS_DETAIL',
  CHECKLIST_INFO = 'CHECKLIST_INFO',
  CHECKLIST_REVIEWER_ASSIGNMENT = 'CHECKLIST_REVIEWER_ASSIGNMENT',
  CHECKLIST_REVIEWER_ASSIGNMENT_POPOVER = 'CHECKLIST_REVIEWER_ASSIGNMENT_POPOVER',
  CHECKLIST_REVIEWER_ASSIGNMENT_SUCCESS = 'CHECKLIST_REVIEWER_ASSIGNMENT_SUCCESS',
  CHECKLIST_REVIEWER_SUBMIT_SUCCESS = 'CHECKLIST_REVIEWER_SUBMIT_SUCCESS',
  CHECKLIST_SENT_TO_AUTHOR_SUCCESS = 'CHECKLIST_SENT_TO_AUTHOR_SUCCESS',
  COMPLETE_JOB_WITH_EXCEPTION = 'COMPLETE_JOB_WITH_EXCEPTION',
  CONFIRMATION_MODAL = 'CONFIRMATION_MODAL',
  EDITING_DISABLED = 'EDITING_DISABLED',
  INITIATE_SIGNOFF = 'INITIATE_SIGNOFF',
  PARAMETER_APPROVAL = 'PARAMETER_APPROVAL',
  PASSWORD_INPUT = 'PASSWORD_INPUT',
  RELEASE_SUCCESS = 'RELEASE_SUCCESS',
  REVIEWERS_DETAIL = 'REVIEWERS_DETAIL',
  REVISION_ERROR = 'REVISION_ERROR',
  SESSION_EXPIRE = 'SESSION_EXPIRE',
  SHOW_COMPLETED_JOB_WITH_EXCEPTION_INFO = 'SHOW_COMPLETED_JOB_WITH_EXCEPTION_INFO',
  SIGNATURE_MODAL = 'SIGNATURE_MODAL',
  SIGN_OFF_INITIATED_SUCCESS = 'SIGN_OFF_INITIATED_SUCCESS',
  SIGN_OFF_PROGRESS = 'SIGN_OFF_PROGRESS',
  SIGN_OFF_SUCCESS = 'SIGN_OFF_SUCCESS',
  START_TASK_ERROR_MODAL = 'START_TASK_ERROR_MODAL',
  SUBMIT_REVIEW_MODAL = 'SUBMIT_REVIEW_MODAL',
  TASK_MEDIA = 'TASK_MEDIA',
  TIMED_TASK_CONFIG = 'TIMED_TASK_CONFIG',
  SECRET_KEY_MODAL = 'SECRET_KEY_MODAL',
  VALIDATE_CREDENTIALS_MODAL = 'VALIDATE_CREDENTIALS_MODAL',
  ASSIGNMENT_INFO = 'ASSIGNMENT_INFO',
  ENTITY_START_ERROR_MODAL = 'ENTITY_START_ERROR_MODAL',
  REASON_MODAL = 'REASON_MODAL',
  JOB_COMPLETE_ALL_TASKS_ERROR = 'JOB_COMPLETE_ALL_TASKS_ERROR',
  WEBCAM_OVERLAY = 'WEBCAM_OVERLAY',
  AUTOMATION_ACTION = 'AUTOMATION_ACTION',
  CONFIGURE_COLUMNS = 'CONFIGURE_COLUMNS',
  CONFIGURE_OBJECT_TYPE = 'CONFIGURE_OBJECT_TYPE',
  CONFIGURE_ACTIONS = 'CONFIGURE_ACTIONS',
  PROCESS_SHARING = 'PROCESS_SHARING',
  CONFIGURE_JOB_PARAMETERS = 'CONFIGURE_JOB_PARAMETERS',
  QR_SCANNER = 'QR_SCANNER',
  QR_GENERATOR = 'QR_GENERATOR',
  PUT_CUSTOM_VIEW = 'PUT_CUSTOM_VIEW',
  SET_DATE = 'SET_DATE',
  JOB_VERIFICATION = 'JOB_VERIFICATION',
  VIEW_REASON = 'VIEW_REASON',
  TASK_PAUSE_REASON_MODAL = 'TASK_PAUSE_REASON_MODAL',
  AUTOMATION_TASK_MODAL = 'AUTOMATION_TASK_MODAL',
  ORIENTATION_MODAL = 'ORIENTATION_MODAL',
  MULTI_TAB_MODAL = 'MULTI_TAB_MODAL',
  CHECKLIST_ERRORS = 'CHECKLIST_ERRORS',
  JOB_PARAMETER_VARIATION = 'JOB_PARAMETER_VARIATION',
  TASK_RECURRENCE_MODAL = 'TASK_RECURRENCE_MODAL',
  REPEAT_TASK_ERROR_MODAL = 'REPEAT_TASK_ERROR_MODAL',
  TASK_RECURRENCE_EXECUTION_MODAL = 'TASK_RECURRENCE_EXECUTION_MODAL',
  END_TASK_RECURRENCE_MODAL = 'END_TASK_RECURRENCE_MODAL',
  VIEW_REASON_MODAL = 'VIEW_REASON_MODAL',
  SCHEDULE_TASK_MODAL = 'SCHEDULE_TASK_MODAL',
  ADD_REMARK_MODAL = 'ADD_REMARK_MODAL',
  CONFIGURE_TASK_CONDITIONS = 'CONFIGURE_TASK_CONDITIONS',
  QR_CODE_PARSER_MODAL = 'QR_CODE_PARSER_MODAL',
  RANGE_FILTER_MODAL = 'RANGE_FILTER_MODAL',
  TASK_DEPENDENCY_MODAL = 'TASK_DEPENDENCY_MODAL',
  VIEW_TASK_DEPENDENCY_MODAL = 'VIEW_TASK_DEPENDENCY_MODAL',
  TASK_DEPENDENCY_ERROR_MODAL = 'TASK_DEPENDENCY_ERROR_MODAL',
  USER_ASSIGN_USER_GROUP = 'USER_ASSIGN_USER_GROUP',
  PARAMETER_CORRECTION_MODAL = 'PARAMETER_CORRECTION_MODAL',
  PARAMETER_EXCEPTION_MODAL = 'PARAMETER_EXCEPTION_MODAL',
  CORRECTION_LIST_MODAL = 'CORRECTION_LIST_MODAL',
  TASK_EXECUTOR_LOCK = 'TASK_EXECUTOR_LOCK',
  TASK_EXECUTOR_LOCK_DETAILS = 'TASK_EXECUTOR_LOCK_DETAILS',
  TASK_EXECUTOR_LOCK_ERROR = 'TASK_EXECUTOR_LOCK_ERROR',
  APPROVALS_LIST_MODAL = 'APPROVALS_LIST_MODAL',
  REFETCH_JOB_COMPOSER_DATA = 'REFETCH_JOB_COMPOSER_DATA',
  COPY_ENTITY_MODAL = 'COPY_ENTITY_MODAL',
  OBJECT_PREVIEW_MODAL = 'OBJECT_PREVIEW_MODAL',
  OBJECT_JOB_LOG_PREVIEW_MODAL = 'OBJECT_JOB_LOG_PREVIEW_MODAL',
  JOB_ANNOTATIONS = 'JOB_ANNOTATIONS',
  BULK_SELF_VERIFICATION_MODAL = 'BULK_SELF_VERIFICATION_MODAL',
  BULK_PEER_VERIFICATION_MODAL = 'BULK_PEER_VERIFICATION_MODAL',
  BULK_EXCEPTION_MODAL = 'BULK_EXCEPTION_MODAL',
  VIEW_EXCEPTIONS_DETAILS = 'VIEW_EXCEPTIONS_DETAILS',
  CREATE_ACTION_MODAL = 'CREATE_ACTION_MODAL',
  SAME_SESSION_VERIFICATION_MODAL = 'SAME_SESSION_VERIFICATION_MODAL',
  BULK_SAME_SESSION_VERIFICATION_MODAL = 'BULK_SAME_SESSION_VERIFICATION_MODAL',
}

export interface CommonOverlayProps<T = unknown> {
  type: OverlayNames;
  props?: T;
  key: string;
  closeOverlay: () => void;
  closeAllOverlays: () => void;
  popOverAnchorEl?: Element | ((element: Element) => Element);
}

export interface Overlay {
  type: OverlayNames;
  props?: Record<string, any>;
  popOverAnchorEl?: Element | ((element: Element) => Element);
}

export enum OverlayContainerAction {
  CLOSE_ALL_OVERLAY = '@@overlay/Container/CLOSE_ALL_OVERLAY',
  CLOSE_OVERLAY = '@@overlay/Container/CLOSE_OVERLAY',
  OPEN_OVERLAY = '@@overlay/Container/OPEN_OVERLAY',
  UPDATE_PROPS = '@@overlay/Container/UPDATE_PROPS',
}

export interface OverlayContainerState {
  readonly currentOverlays: Overlay[];
}

export type OverlayContainerActionType = ReturnType<
  | typeof closeAllOverlayAction
  | typeof closeOverlayAction
  | typeof openOverlayAction
  | typeof updatePropsAction
>;

export interface Column {
  id: string;
  label: string;
  align?: 'inherit' | 'left' | 'center' | 'right' | 'justify';
  pinned?: boolean;
  format?: (row: Row) => React.ReactNode;
  maxWidth?: string;
  index?: number | string;
  triggerType?: string;
  minWidth?: number;
}

export interface Row {
  id: string;
  [key: string]: any;
}

export interface SameSessionVerificationModalProps {
  parameterResponseId: string;
  parameterId: string;
  verifications: Record<string, any>;
}

export type OverlayProps = SameSessionVerificationModalProps | Record<string, any>;
