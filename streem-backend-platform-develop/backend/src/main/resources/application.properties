##################### Spring Core #####################
spring.main.banner-mode=off
server.error.whitelabel.enabled=false
spring.servlet.multipart.enabled=true
server.compression.enabled=true
server.compression.mime-types=application/json,image/jpeg,image/bmp,image/gif,image/vnd.microsoft.icon,image/png,image/svg+xml,image/tiff,image/webp
management.endpoint.health.probes.enabled=true
management.endpoint.health.status.http-mapping.down=500
management.endpoint.health.status.http-mapping.out_of_service=503
management.endpoint.health.status.http-mapping.warning=500
spring.data.rest.default-media-type=application/json
logging.level.root=warn
logging.level.web=warn
springdoc.swagger-ui.path=/api-docs.html
springdoc.swagger-ui.operationsSorter=method
##################### Pagination Details #####################
spring.data.web.pageable.max-page-size=250
spring.data.web.pageable.default-page-size=10000
##################### Spring Data JPA #####################
spring.jpa.database=postgresql
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.username=${datasource.username}
spring.datasource.password=${datasource.password}
spring.datasource.url=jdbc:${spring.jpa.database}://${datasource.host}:${datasource.port}/${datasource.database}
spring.jpa.hibernate.ddl-auto=validate
spring.datasource.hikari.maximum-pool-size=${datasource.pool-size}
spring.jpa.properties.hibernate.jdbc.batch_size=5
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.datasource.hikari.data-source-properties.stringtype=unspecified
logging.level.org.hibernate=warn
##################### Liquibase #####################
spring.liquibase.change-log=classpath:/db/changelog/changelog-platform-dev-master.xml
#liquibase.change-log=src/main/resources/db/changelog/common/01-seed-schema.postgresql.sql
spring.liquibase.enabled=false
##################### Server #####################
spring.application.name=dwi
server.http2.enabled=false
server.servlet.context-path=/
server.port=8080
logging.level=info
logging.file.path=/var/log/leucine/${spring.application.name}
##################### File Storage #####################
spring.servlet.multipart.file-size-threshold=3KB
spring.servlet.multipart.max-file-size=250MB
spring.servlet.multipart.max-request-size=2GB
spring.servlet.multipart.resolve-lazily=false
medias.location=/tmp
medias.cdn=http://assets.platform.leucinetech.com
medias.file-types=pdf,jpeg,jpg,png,doc,docx,xls,xlsx,ppt,pptx,csv
medias.logo-url=https://via.placeholder.com/900x900
##################### Jaas Service Properties #####################
jaas.service=c6d8285b72a84efb8fbd608c7cada484
jaas.root=http://localhost:9091
#jaas.root=https://api.jaas.stable.qa.platform.leucinetech.com
jaas.path.authAdditionalVerification=/v1/auth/additional/verification
jaas.path.authCredentialsValidate=/v1/auth/credentials/validate
jaas.path.authIdentityValidate=/v1/auth/identity/validate
jaas.path.authChallengeQuestionValidate=/v1/auth/challenge-questions/validate
jaas.path.authLogin=/v1/auth/login
jaas.path.authRelogin=/v1/auth/re-login
jaas.path.authLogout=/v1/auth/logout
jaas.path.authPasswordReset=/v1/auth/password/reset
// TODO make the key consistent to the url endpoint
jaas.path.authRefreshToken=/v1/auth/token/refresh
jaas.path.authRegister=/v1/auth/register
jaas.path.authTokenValidate=/v1/auth/token/validate
jaas.path.authTokenReset=/v1/auth/token/reset
jaas.path.authAdminNotify=/v1/auth/admin/notify
jaas.path.authUpdatePassword=/v1/auth/password
jaas.path.authorize=/v1/auth/authorize
jaas.path.user=/v1/users/{0}
jaas.path.userAll=/v1/users/all
jaas.path.userArchive=/v1/users/{0}/archive
jaas.path.userAudits=/v1/users/audits
jaas.path.userByRoles=/v1/users/by/roles
jaas.path.userChallengeQuestions=/v1/users/{0}/challenge-questions
jaas.path.userEmailCheck=/v1/users/email/check
jaas.path.userEmployeeIdCheck=/v1/users/employee-id/check
jaas.path.userTokenCancel=/v1/users/{0}/token/cancel
jaas.path.userTokenReset=/v1/users/{0}/token/reset
jaas.path.userUnarchive=/v1/users/{0}/unarchive
jaas.path.userUnlock=/v1/users/{0}/unlock
jaas.path.userUpdateBasic=/v1/users/{0}/basic
jaas.path.userUpdatePassword=/v1/users/{0}/password
jaas.path.userUsernameCheck=/v1/users/username/check
jaas.path.userSwitchFacility=/v1/users/{0}/facilities/{1}/switch
jaas.path.users=/v1/users
jaas.path.facility=/v1/facilities
jaas.path.roles=/v1/roles
jaas.path.challengeQuestions=/v1/challenge-questions
jaas.path.accountLookup=/v1/auth/account/lookup?username={0}
jaas.path.authExtras = /v1/auth/extras?fqdn={0}
jaas.path.directorySearch=/v1/users/directory/search?limit={1}&query={0}
jaas.path.ssoVerify=/v1/auth/sso/verify
jaas.path.ssoRedirectUrl=/v1/auth/sso/redirect-url
jaas.path.downloadUserAudits=/v1/users/audits/download
##################### Email Properties #####################
email.host=smtp.gmail.com
email.port=587
email.username=username
email.password=password
email.fromAddress=fromAddress
email.fromName=Support Leucine
email.protocol=smtp
email.tlsEnabled=true
email.authEnabled=true
email.debugEnabled=true
email.enabled=true
###################### App URLs #####################################
app.path.login=auth/login
app.path.job=jobs/{0}
app.path.checklist=checklists/{0}
app.path.taskExecution=inbox/{0}?taskId={1}
##################### Database Credentials #####################
datasource.host=localhost
datasource.port=5432
datasource.database=dwi
datasource.username=postgres
datasource.password=postgres
datasource.pool-size=5
##################### Mongo DB Credentials ######################
spring.data.mongodb.uri=mongodb://${mongodb.username}:${mongodb.password}@${mongodb.host}:${mongodb.port}/${mongodb.database}?authSource=${mongodb.authentication-database}&replicaSet=${mongodb.replica-set}
mongodb.host=localhost
mongodb.port=27017
mongodb.authentication-database=admin
mongodb.database=ontology
mongodb.username=root
mongodb.password=root
mongodb.replica-set=rs0
spring.data.mongodb.auto-index-creation=true
##################### Quartz ######################
# TODO SETUP THREAD POOL
spring.quartz.job-store-type=jdbc
spring.quartz.jdbc.initialize-schema=never
spring.quartz.jdbc.schema=classpath:org/quartz/impl/jdbcjobstore/tables_postgres.sql
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
###################### AWS QuickSight ########################
aws.access.key=
aws.secret.key=
aws.account.id=
aws.region=ap-south-1
aws.allowed.domains=
aws.arn=
aws.sqs.queue.name=email-delivery-queue

#################### Metabase Properties ########################
metabase.url=http://localhost:3000
metabase.secretKey=<SOME_SECRET_KEY>
metabase.refreshRate=30
#################### TEMP ########################
jaas.datasource.database=jaas

# Actuator endpoints
management.endpoints.web.exposure.include=health,info,metrics,prometheus,httptrace
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=test-production

# Trace correlation in logs
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}] [%X{requestId:-}] [%X{userId:-}|%X{username:-}]

# HTTP request logging
spring.mvc.log-request-details=true
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
logging.level.io.opentelemetry=INFO
logging.level.io.micrometer.tracing=INFO

otel.service.name=backend-dwi
otel.service.version=4.9.11

# OTLP exporter configuration for Tempo (gRPC endpoint)
otel.exporter.otlp.endpoint=http://localhost:4317

# Tracing configuration
otel.traces.sampler.probability=1.0
